<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="link.lycreate.bluefatty.dao.OrderDao">
  <resultMap id="BaseResultMap" type="link.lycreate.bluefatty.model.Order">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="servant_id" jdbcType="INTEGER" property="servantId" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="place_id" jdbcType="INTEGER" property="placeId" />
    <result column="content" property="content"/>
    <result column="title" property="title" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="dmder_id" jdbcType="INTEGER" property="dmderId" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap id="orderResult" type="link.lycreate.bluefatty.utils.OrdersResult">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="posterId" />
    <result column="user_name" jdbcType="VARCHAR" property="posterName" />
    <result column="user_img" jdbcType="VARCHAR" property="posterImg" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="place_id" jdbcType="INTEGER" property="placeId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="credit" jdbcType="INTEGER" property="posterStar" />
  </resultMap>
  <!--<resultMap id="orderResult" type="link.lycreate.bluefatty.utils.OrdersResultt">-->
    <!--<id column="order_id" jdbcType="INTEGER" property="orderId" />-->
    <!--<result column="deadline" jdbcType="TIMESTAMP" property="deadline" />-->
    <!--<result column="place_id"-->
  <!--</resultMap>-->
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="link.lycreate.bluefatty.model.Order">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, create_time, servant_id, deadline, place_id, type_id, dmder_id, price,
    comment_id, status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="order_id" keyProperty="orderId" parameterType="link.lycreate.bluefatty.model.Order" useGeneratedKeys="true">
    insert into orders (create_time, servant_id, deadline,
      place_id, tel, type_id, 
      dmder_id, price, comment_id, 
      `status`, content)
    values (#{createTime,jdbcType=TIMESTAMP}, #{servantId,jdbcType=INTEGER}, #{deadline,jdbcType=TIMESTAMP}, 
      #{placeId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER},
      #{dmderId,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="order_id" keyProperty="orderId" parameterType="link.lycreate.bluefatty.model.Order" useGeneratedKeys="true">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="servantId != null">
        servant_id,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="placeId != null">
        place_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="dmderId != null">
        dmder_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="servantId != null">
        #{servantId,jdbcType=INTEGER},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="placeId != null">
        #{placeId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dmderId != null">
        #{dmderId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="link.lycreate.bluefatty.model.Order">
    update orders
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="servantId != null">
        servant_id = #{servantId,jdbcType=INTEGER},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="placeId != null">
        place_id = #{placeId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dmderId != null">
        dmder_id = #{dmderId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="link.lycreate.bluefatty.model.Order">
    update orders
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      servant_id = #{servantId,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      place_id = #{placeId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      dmder_id = #{dmderId,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="link.lycreate.bluefatty.model.Order">
    update orders
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      servant_id = #{servantId,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      place_id = #{placeId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      dmder_id = #{dmderId,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <select id="selectDmdByPage" resultType="link.lycreate.bluefatty.utils.DemandResult">
    <!--<bind name="pattern" value="'%'+keyword+'%'"></bind>-->
        select a.order_id as dmdId,a.create_time as createTime,a.deadline as deadLine,a.place_id as placeId,
        a.type_id as typeId,a.title as title,a.price as price,a.dmder_id as dmderId,b.user_name as dmderName,
        b.credit as dmderStar,b.user_img as dmderImg
        from orders a left join user b on a.dmder_id=b.user_id where a.status=1 and a.university_id=#{universityId}
        <if test="place!=null and place.size>0">
          and a.place_id in
          <foreach collection="place" index="index" item="item" open="(" separator="," close=")">
            #{item}
          </foreach>
        </if>
        <if test="type!=null and type.size>0">
          and a.type_id in
          <foreach collection="type" index="index" item="item" open="(" separator="," close=")">
            #{item}
          </foreach>
        </if>
        <if test="lowDeadline!=null">
          and a.deadline&gt;=#{lowDeadline}
        </if>
        <if test="highDeadline!=null">
          and a.deadline&lt;=#{highDeadline}
        </if>
        <if test="lowPrice!=-1">
          and  a.price&gt;=#{lowPrice}
        </if>
        <if test="highPrice!=-1">
          and a.price&lt;=#{highPrice}
        </if>
        <!--<if test="keyword!='null'">-->
          <!--and (a.type_id in (select type_id from type where content like #{pattern}) or a.content like #{pattern})-->
        <!--</if>-->
        limit #{pageNow},10
    </select>
  <select id="selectDmdByPlace" resultType="link.lycreate.bluefatty.utils.DemandResult">
        select a.order_id as dmdId,a.create_time as createTime,a.deadline as deadLine,a.place_id as placeId,
        a.type_id as typeId,a.content as content,a.price as price,a.dmder_id as dmderId,b.user_name as dmderName,
        b.credit as dmderStar,b.user_img as dmderImg
        from orders a left join user b on a.dmder_id=b.user_id where a.status=1 and a.place_id in
        <foreach collection="place" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
         limit #{pageNow},10
  </select>
  <select id="selectDmdByType" resultType="link.lycreate.bluefatty.utils.DemandResult">
    select a.order_id as dmdId,a.create_time as createTime,a.deadline as deadLine,a.place_id as placeId,
    a.type_id as typeId,a.content as content,a.price as price,a.dmder_id as dmderId,b.user_name as dmderName,
    b.credit as dmderStar,b.user_img as dmderImg
    from orders a left join user b on a.dmder_id=b.user_id where a.status=1 and a.type_id in
    <foreach collection="type" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    limit #{pageNow},10
  </select>
  <select id="selectDmdByDeadline" resultType="link.lycreate.bluefatty.utils.DemandResult">
    select a.order_id as dmdId,a.create_time as createTime,a.deadline as deadLine,a.place_id as placeId,
        a.type_id as typeId,a.content as content,a.price as price,a.dmder_id as dmderId,b.user_name as dmderName,
        b.credit as dmderStar,b.user_img as dmderImg
        from orders a left join user b on a.dmder_id=b.user_id where a.status=1 and a.deadline between #{lowDeadline} and #{highDeadline} limit #{pageNow},10
  </select>
  <select id="selectDmdByPrice" resultType="link.lycreate.bluefatty.utils.DemandResult">
    select a.order_id as dmdId,a.create_time as createTime,a.deadline as deadLine,a.place_id as placeId,
        a.type_id as typeId,a.content as content,a.price as price,a.dmder_id as dmderId,b.user_name as dmderName,
        b.credit as dmderStar,b.user_img as dmderImg
        from orders a left join user b on a.dmder_id=b.user_id where a.status=1 and a.price between #{lowPrice} and #{highPrice} limit #{pageNow},10
  </select>
  <select id="selectDmdByKeyword" resultType="link.lycreate.bluefatty.utils.DemandResult">
    <bind name="pattern" value="'%'+keyword+'%'"></bind>
    select a.order_id as dmdId,a.create_time as createTime,a.deadline as deadline,a.place_id as placeId,
    a.type_id as typeId,a.content as content,a.price as price,a.dmder_id as dmderId,b.user_name as dmderName,
    b.credit as dmderStar,b.user_img as dmderImg
    from orders a left join user b on a.dmder_id=b.user_id where a.status=1
    and (a.title like #{pattern} or a.content like #{pattern}) limit #{pageNow},10
  </select>
  <select id="selectDmdByDmdId" resultType="String">
    select content from orders where order_id=#{dmdId}
  </select>
  <select id="selectServiceByPage" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    <!--<bind name="pattern" value="'%'+keyword+'%'"></bind>-->
    select a.order_id as serviceId,a.create_time as lowDeadline,a.deadline as highDeadline,a.place_id as placeId,
    a.type_id as typeId,a.title as title,a.price as price,a.servant_id as servantId,b.user_name as servantName,
    b.credit as servantStar,b.user_img as servantImg
    from orders a left join user b on a.servant_id=b.user_id where a.status=0 and a.university_id=#{universityId}
    <if test="place!=null and place.size>0">
      and a.place_id in
      <foreach collection="place" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="type!=null and type.size>0">
      and a.type_id in
      <foreach collection="type" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="lowDeadline!=null">
      and a.deadline &gt;= #{lowDeadline}
    </if>
    <if test="highDeadline!=null">
      and a.deadline &lt;= #{highDeadline}
    </if>
    <if test="lowPrice!=-1">
      and  a.price &gt;= #{lowPrice}
    </if>
    <if test="highPrice!=-1">
      and a.price &lt;= #{highPrice}
    </if>
    <!--<if test="keyword!=null">-->
      <!--and (a.type_id in (select type_id from type where content like #{pattern}) or a.content like #{pattern})-->
    <!--</if>-->
    limit #{pageNow},10
  </select>
  <select id="selectServiceByDeadline" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    select a.order_id as serviceId,a.create_time as lowDeadline,a.deadline as highDeadline,a.place_id as placeId,
        a.type_id as typeId,a.content as content,a.price as price,a.servant_id as servantId,b.user_name as servantName,
        b.credit as servantStar,b.user_img as servantImg
        from orders a left join user b on a.servant_id=b.user_id where a.status=0 and #{highDeadline}>=a.deadline and a.create_time>=#{lowDeadline}
        limit #{pageNow},10
  </select>
  <select id="selectServiceByPlace" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    select a.order_id as serviceId,a.create_time as lowDeadline,a.deadline as highDeadline,a.place_id as placeId,
    a.type_id as typeId,a.content as content,a.price as price,a.servant_id as servantId,b.user_name as servantName,
    b.credit as servantStar,b.user_img as servantImg
    from orders a left join user b on a.servant_id=b.user_id where a.status=0 and a.place_id in
    <foreach collection="place" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    limit #{pageNow},10
  </select>
  <select id="selectServiceByPrice" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    select a.order_id as serviceId,a.create_time as lowDeadline,a.deadline as highDeadline,a.place_id as placeId,
        a.type_id as typeId,a.content as content,a.price as price,a.servant_id as servantId,b.user_name as servantName,
        b.credit as servantStar,b.user_img as servantImg
        from orders a left join user b on a.servant_id=b.user_id where a.status=0 and a.price between #{lowPrice} and #{highPrice} limit #{pageNow},10
  </select>
  <select id="selectServiceByType" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    select a.order_id as serviceId,a.create_time as lowDeadline,a.deadline as highDeadLine,a.place_id as placeId,
    a.type_id as typeId,a.content as content,a.price as price,a.servant_id as servantId,b.user_name as servantName,
    b.credit as servantStar,b.user_img as servantImg
    from orders a left join user b on a.servant_id=b.user_id where a.status=0 and a.type_id in
    <foreach collection="type" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    limit #{pageNow},10
  </select>
  <select id="selectServiceByKeyword" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    <bind name="pattern" value="'%'+keyword+'%'"></bind>
    select a.order_id as serviceId,a.create_time as lowDeadline,a.deadline as highDeadline,a.place_id as placeId,
        a.type_id as typeId,a.content as content,a.price as price,a.servant_id as servantId,b.user_name as servantName,
        b.credit as servantStar,b.user_img as servantImg
        from orders a left join user b on a.servant_id=b.user_id where a.status=0
        and (a.title like #{pattern} or a.content like #{pattern}) limit #{pageNow},10
  </select>
  <select id="selectServiceByServiceId" resultType="String">
    select content from orders where order_id=#{serviceId}
  </select>
  <insert id="insertService">
    insert into orders (user_id,servant_id,type_id,place_id,price,create_time,deadline,title,content,status,university_id)
    values
    (#{servantId},#{servantId},#{typeId},#{placeId},#{price},#{lowDeadline},#{highDeadline},#{title},#{content},0,
    (select university_id from user where user.user_id=#{servantId}))
  </insert>
  <insert id="insertDemand">
    insert into orders (user_id,dmder_id,type_id,price,create_time,deadline,place_id,title,content,status,university_id)
    values
    (#{userId},#{userId},#{typeId},#{price},#{createTime},#{deadline},#{placeId},#{title},#{content},1,
    (select university_id from user where user.user_id=#{userId}))
  </insert>
  <select id="selectStatus" resultType="int">
    select status from orders where order_id=#{orderId}
  </select>
  <select id="selectDmderId" resultType="int">
    select dmder_id from orders where order_id=#{dmdId}
  </select>
  <select id="selectServantId" resultType="int">
    select servant_id from orders where order_id=#{serviceId}
  </select>
  <update id="updateServiceConfirm">
    update orders set dmder_id=#{dmderId},status=#{status} where order_id=#{orderId}
  </update>
  <select id="selectRecordServiceOrder" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    select a.order_id as 'serviceId',a.deadline as 'highDeadline',a.place_id as 'placeId',
        a.type_id as 'typeId',a.status as 'status',a.title as 'title',a.price as 'price',a.user_id as 'posterId',b.user_name as 'posterName',
        b.credit as 'posterStar',b.user_img as 'posterImg' from orders a left join user b on a.user_id=b.user_id left join records c
        on a.order_id=c.order_id where c.recorder_id=#{servantId} and c.status=1
  </select>
  <!--<select id="selectRecordServiceOrder" resultMap="orderResult">-->
    <!--select a.order_id,a.deadline,a.place_id,a.type_id,a.status,a.title,a.price,a.user_id,b.user_name,-->
        <!--b.credit,b.user_img from orders a left join user b on a.user_id=b.user_id left join records c-->
        <!--on a.order_id=c.order_id where c.recorder_id=#{servantId} and c.status=1-->
  <!--</select>-->
  <select id="selectServiceOrderByServiceId" resultType="link.lycreate.bluefatty.utils.ServiceResult">
    select a.order_id as 'serviceId',a.deadline as 'highDeadline',a.place_id as 'placeId',
        a.type_id as 'typeId',a.status as 'status',a.title as 'title',a.price as 'price',a.user_id as 'posterId',b.user_name as 'posterName',
        b.credit as 'posterStar',b.user_img as 'posterImg' from orders a left join user b on a.user_id=b.user_id where a.servant_id=#{servantId}
  </select>

  <select id="selectRecordDmdOrder" resultType="link.lycreate.bluefatty.utils.DemandResult">
     select a.order_id as 'dmdId',a.deadline as 'deadline',a.place_id as 'placeId',
        a.type_id as 'typeId',a.status as 'status',a.title as 'title',a.price as 'price',a.user_id as 'dmderId',b.user_name as 'dmderName',
        b.credit as 'dmderStar',b.user_img as 'dmderImg' from orders a left join user b on a.user_id=b.user_id left join records c
        on a.order_id=c.order_id where c.recorder_id=#{dmdId} and c.status=0
  </select>
  <select id="selectDemandOrderByDmdId" resultType="link.lycreate.bluefatty.utils.DemandResult">
    select a.order_id as 'dmdId',a.deadline as 'deadline',a.place_id as 'placeId',
        a.type_id as 'typeId',a.status as 'status',a.title as 'title',a.price as 'price',a.user_id as 'dmderId',b.user_name as 'dmderName',
        b.credit as 'dmderStar',b.user_img as 'dmderImg' from orders a left join user b on a.user_id=b.user_id where a.dmder_id=#{dmderId}
  </select>
  <!--<select id="selectServiceOrderByServiceId" resultMap="orderResult">-->
    <!--select a.order_id,a.deadline,a.place_id,-->
        <!--a.type_id,a.title,a.price,a.user_id,b.user_name,-->
        <!--b.credit,b.user_img,a.status from orders a left join user b on a.user_id=b.user_id where a.servant_id=#{servantId}-->
  <!--</select>-->
  <update id="updateServantFinish">
    update orders set status=3 where order_id=#{serviceId} and servant_id=#{userId} and status=2
  </update>
  <update id="updateDemandConfirm">
    update orders set servant_id=#{servantId},status=#{status} where order_id=#{dmdId}
  </update>
  <update id="updateDmderFinish">
    update orders set status=4 where order_id=#{dmdId} and servant_id=#{userId} and (status=2||status=3)
  </update>
</mapper>